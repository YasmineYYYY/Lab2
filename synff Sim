`timescale 1ns/1ns
module tb_synff();

reg sys_clk ;
reg sys_rst_n ;
reg key_in ;

 wire led_out ;

 initial begin
 sys_clk = 1'b1; //Clock uses blocking assignment.
 
 // Other inputs use un-block assignments
 sys_rst_n <= 1'b0; //At the beginning, the reset button is pressed.
 key_in <= 1'b0; //The input is initialed as 0
 
 #20
 sys_rst_n <= 1'b1; //After 20ns, the reset button is released
 
 
 #210
 sys_rst_n <= 1'b0; 
 
 
 #40
 sys_rst_n <= 1'b1; //After 40ns, the reset button is released again
 end

 
 always #10 sys_clk = ~sys_clk; 

 
 always #20 key_in <= {$random} % 2;

 
 initial begin
 $timeformat(-9, 0, "ns", 6);
 $monitor("@time %t: key_in=%b led_out=%b", $time, key_in, led_out);
 end
 
 synff synff_inst
 (
 .sys_clk (sys_clk ), //input sys_clk
 .sys_rst_n (sys_rst_n ), //input sys_rst_n
 .key_in (key_in ), //input key_in

 .led_out (led_out ) //output led_out
 );

 endmodule
